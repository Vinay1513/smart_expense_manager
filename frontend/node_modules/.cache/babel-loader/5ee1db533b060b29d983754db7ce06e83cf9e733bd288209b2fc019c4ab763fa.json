{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle token refresh\napi.interceptors.response.use(response => {\n  return response;\n}, async error => {\n  var _error$response;\n  const originalRequest = error.config;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      const refreshToken = localStorage.getItem('refreshToken');\n      if (!refreshToken) {\n        throw new Error('No refresh token');\n      }\n      const response = await axios.post(`${process.env.REACT_APP_API_URL || 'http://localhost:8000/api'}/auth/refresh/`, {\n        refresh: refreshToken\n      });\n      const {\n        access\n      } = response.data;\n      localStorage.setItem('token', access);\n      api.defaults.headers.common['Authorization'] = `Bearer ${access}`;\n\n      // Retry the original request\n      originalRequest.headers.Authorization = `Bearer ${access}`;\n      return api(originalRequest);\n    } catch (refreshError) {\n      // Refresh token failed, redirect to login\n      localStorage.removeItem('token');\n      localStorage.removeItem('refreshToken');\n      window.location.href = '/login';\n      return Promise.reject(refreshError);\n    }\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","originalRequest","status","_retry","refreshToken","Error","post","refresh","access","data","setItem","defaults","common","refreshError","removeItem","window","location","href"],"sources":["C:/Users/Vinay/Desktop/Expenso/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle token refresh\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n\r\n    if (error.response?.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n\r\n      try {\r\n        const refreshToken = localStorage.getItem('refreshToken');\r\n        if (!refreshToken) {\r\n          throw new Error('No refresh token');\r\n        }\r\n\r\n        const response = await axios.post(\r\n          `${process.env.REACT_APP_API_URL || 'http://localhost:8000/api'}/auth/refresh/`,\r\n          { refresh: refreshToken }\r\n        );\r\n\r\n        const { access } = response.data;\r\n        localStorage.setItem('token', access);\r\n        api.defaults.headers.common['Authorization'] = `Bearer ${access}`;\r\n\r\n        // Retry the original request\r\n        originalRequest.headers.Authorization = `Bearer ${access}`;\r\n        return api(originalRequest);\r\n      } catch (refreshError) {\r\n        // Refresh token failed, redirect to login\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('refreshToken');\r\n        window.location.href = '/login';\r\n        return Promise.reject(refreshError);\r\n      }\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;EACrEC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAN,GAAG,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAf,GAAG,CAACO,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC,EACD,MAAOH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACf,MAAMC,eAAe,GAAGL,KAAK,CAACL,MAAM;EAEpC,IAAI,EAAAS,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;IAC7DF,eAAe,CAACE,MAAM,GAAG,IAAI;IAE7B,IAAI;MACF,MAAMC,YAAY,GAAGX,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MACzD,IAAI,CAACU,YAAY,EAAE;QACjB,MAAM,IAAIC,KAAK,CAAC,kBAAkB,CAAC;MACrC;MAEA,MAAMN,QAAQ,GAAG,MAAMnB,KAAK,CAAC0B,IAAI,CAC/B,GAAGtB,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B,gBAAgB,EAC/E;QAAEqB,OAAO,EAAEH;MAAa,CAC1B,CAAC;MAED,MAAM;QAAEI;MAAO,CAAC,GAAGT,QAAQ,CAACU,IAAI;MAChChB,YAAY,CAACiB,OAAO,CAAC,OAAO,EAAEF,MAAM,CAAC;MACrC3B,GAAG,CAAC8B,QAAQ,CAACxB,OAAO,CAACyB,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUJ,MAAM,EAAE;;MAEjE;MACAP,eAAe,CAACd,OAAO,CAACQ,aAAa,GAAG,UAAUa,MAAM,EAAE;MAC1D,OAAO3B,GAAG,CAACoB,eAAe,CAAC;IAC7B,CAAC,CAAC,OAAOY,YAAY,EAAE;MACrB;MACApB,YAAY,CAACqB,UAAU,CAAC,OAAO,CAAC;MAChCrB,YAAY,CAACqB,UAAU,CAAC,cAAc,CAAC;MACvCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;MAC/B,OAAOpB,OAAO,CAACC,MAAM,CAACe,YAAY,CAAC;IACrC;EACF;EAEA,OAAOhB,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAef,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}