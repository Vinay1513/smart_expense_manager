{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vinay\\\\Desktop\\\\Expenso\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is logged in on app start\n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      // You could verify the token here by making an API call\n      setLoading(false);\n    } else {\n      setLoading(false);\n    }\n  }, [token]);\n  const login = async (username, password) => {\n    try {\n      const response = await api.post('/auth/login/', {\n        username,\n        password\n      });\n      const {\n        access,\n        refresh\n      } = response.data;\n      localStorage.setItem('token', access);\n      localStorage.setItem('refreshToken', refresh);\n      api.defaults.headers.common['Authorization'] = `Bearer ${access}`;\n      setToken(access);\n\n      // Get user info\n      // You might want to add an endpoint to get current user info\n      setUser({\n        username\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Login failed'\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await api.post('/auth/register/', userData);\n\n      // Auto-login after registration\n      const loginResult = await login(userData.username, userData.password);\n      return loginResult;\n    } catch (error) {\n      var _error$response2;\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || 'Registration failed'\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('refreshToken');\n    delete api.defaults.headers.common['Authorization'];\n    setToken(null);\n    setUser(null);\n  };\n  const refreshToken = async () => {\n    try {\n      const refresh = localStorage.getItem('refreshToken');\n      if (!refresh) {\n        logout();\n        return false;\n      }\n      const response = await api.post('/auth/refresh/', {\n        refresh\n      });\n      const {\n        access\n      } = response.data;\n      localStorage.setItem('token', access);\n      api.defaults.headers.common['Authorization'] = `Bearer ${access}`;\n      setToken(access);\n      return true;\n    } catch (error) {\n      logout();\n      return false;\n    }\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    register,\n    logout,\n    refreshToken\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"6yaUUgx9bt/8SVo6kb7BgPC/qRU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","defaults","headers","common","login","username","password","response","post","access","refresh","data","setItem","success","error","_error$response","_error$response$data","detail","register","userData","loginResult","_error$response2","logout","removeItem","refreshToken","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Vinay/Desktop/Expenso/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport api from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in on app start\r\n    if (token) {\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      // You could verify the token here by making an API call\r\n      setLoading(false);\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  const login = async (username, password) => {\r\n    try {\r\n      const response = await api.post('/auth/login/', {\r\n        username,\r\n        password,\r\n      });\r\n      \r\n      const { access, refresh } = response.data;\r\n      \r\n      localStorage.setItem('token', access);\r\n      localStorage.setItem('refreshToken', refresh);\r\n      \r\n      api.defaults.headers.common['Authorization'] = `Bearer ${access}`;\r\n      setToken(access);\r\n      \r\n      // Get user info\r\n      // You might want to add an endpoint to get current user info\r\n      setUser({ username });\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.detail || 'Login failed',\r\n      };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await api.post('/auth/register/', userData);\r\n      \r\n      // Auto-login after registration\r\n      const loginResult = await login(userData.username, userData.password);\r\n      return loginResult;\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data || 'Registration failed',\r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('refreshToken');\r\n    delete api.defaults.headers.common['Authorization'];\r\n    setToken(null);\r\n    setUser(null);\r\n  };\r\n\r\n  const refreshToken = async () => {\r\n    try {\r\n      const refresh = localStorage.getItem('refreshToken');\r\n      if (!refresh) {\r\n        logout();\r\n        return false;\r\n      }\r\n\r\n      const response = await api.post('/auth/refresh/', {\r\n        refresh,\r\n      });\r\n\r\n      const { access } = response.data;\r\n      localStorage.setItem('token', access);\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${access}`;\r\n      setToken(access);\r\n      return true;\r\n    } catch (error) {\r\n      logout();\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    refreshToken,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}